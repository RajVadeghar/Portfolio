---
import Main from "@/components/Main.astro";
import Pagination from "@/components/Pagination.astro";
import BlogCard from "@/components/blog/blog-card.astro";
import SiteData from "@/constants/siteData.json";
import { getAllBlogs } from "@/helpers/server-actions";
import Layout from "@/layouts/Layout.astro";
import type { GetStaticPaths, InferGetStaticPropsType } from "astro";

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

export const getStaticPaths = (async ({ paginate }) => {
  const blogs = await getAllBlogs();

  return paginate(blogs, {
    pageSize: 5
  });
}) satisfies GetStaticPaths;

const { page } = Astro.props;

const firstUrl = page.currentPage > 1 ? `/blog` : undefined;
const lastUrl =
  page.currentPage < page.lastPage ? `/blog/${page.lastPage}` : undefined;
const prevUrl =
  page.currentPage > 2 ? `/blog/${page.currentPage - 1}` : "/blog";
const nextUrl =
  page.currentPage < page.lastPage
    ? `/blog/${page.currentPage + 1}`
    : undefined;
---

<Layout
  seo={{
    title: SiteData.pages.blog.title,
    description: SiteData.pages.blog.description
  }}
  keywords={SiteData.pages.blog.keywords}
>
  <Main className="mx-auto max-w-4xl pt-20 sm:pt-48">
    {
      page.data.length > 0 ? (
        <>
          <h1 class="bg-gradient-to-r from-[#ffff80] to-[#ff80bf] to-[60%] bg-clip-text pb-2 text-center text-2xl font-bold text-transparent sm:text-left sm:text-4xl md:text-5xl">
            Discover: Blog Articles and More
          </h1>
          <div class="flex flex-col gap-10">
            {page.data.map((blog) => (
              <BlogCard key={blog._id} blog={blog} />
            ))}
          </div>

          <Pagination
            currentPage={page.currentPage}
            lastPage={page.lastPage}
            prevUrl={prevUrl}
            nextUrl={nextUrl}
            firstUrl={firstUrl}
            lastUrl={lastUrl}
          />
        </>
      ) : (
        <p class="text-center text-2xl">No blogs found</p>
      )
    }
  </Main>
</Layout>
