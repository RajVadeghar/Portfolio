---
import HeaderNavItem from "./HeaderNavItem.astro";
import Socials from "../Socials.astro";
const pathname = Astro.url.pathname;
---

<header
  class={`absolute inset-x-0 mx-auto grid max-w-screen-2xl items-center justify-center gap-5 overflow-x-hidden p-8 sm:justify-between place-items-center ${
    pathname === "/"
      ? "grid-cols-1 sm:grid-cols-2 md:grid-cols-3"
      : "grid-cols-1 shadow-sm border-b"
  }`}
>
  {
    pathname === "/" && (
      <div
        id="profile"
        class="flex items-center gap-3 justify-self-center sm:justify-self-start"
      >
        <a href="/about">
          <img
            transition:name="raj-vadeghar-image"
            id="profile-img"
            src="/me.png"
            alt="raj"
            class="z-10 h-12 w-12 whitespace-nowrap rounded-full"
          />
        </a>
        <div id="profile-divider" class="h-10 w-1 rounded-full bg-black/60" />
        <div id="profile-data" class="flex flex-col gap-2">
          <a href="/about" id="name" class="font-medium">
            Full Stack Developer
          </a>
          <Socials className="flex items-center gap-2" />
        </div>
      </div>
    )
  }

  <nav
    class={`${
      pathname === "/" ? "hidden sm:flex" : "flex"
    } items-center font-medium`}
  >
    <HeaderNavItem href="/">Home</HeaderNavItem>
    <HeaderNavItem href="#my-work">My work</HeaderNavItem>
    <HeaderNavItem href="#services">Services</HeaderNavItem>
    <!-- <HeaderNavItem href="#testimonials">Testimonials</HeaderNavItem>
    <HeaderNavItem href="">How much I charge</HeaderNavItem> -->
  </nav>

  {
    pathname === "/" && (
      <a
        href="https://calendly.com/r44j/30min"
        class="hidden w-fit justify-self-end rounded-lg bg-black px-6 py-2 text-sm font-bold text-white ring-black ring-offset-2 hover:ring-2 focus:ring-2 sm:block"
      >
        Book a free meeting
      </a>
    )
  }
</header>

<script>
  import gsap from "gsap";
  import SplitType from "split-type";

  let mm = gsap.matchMedia();
  const breakPoint = 800;

  mm.add(
    {
      isDesktop: `(min-width: ${breakPoint}px)`,
      isSmallScreen: `(max-width: 640px)`,
      isMobile: `(max-width: ${breakPoint - 1}px)`,
      reduceMotion: "(prefers-reduced-motion: reduce)"
    },
    (context) => {
      // @ts-ignore
      const { isDesktop, isSmallScreen } = context.conditions;
      const main = document.querySelector("main");
      const nav = document.querySelector("nav");
      const footer = document.querySelector("footer");
      const letters = new SplitType("#name", { split: "chars" }).chars;
      const duration = 0.3;

      const mainTl = gsap.timeline();
      const staggerTl = gsap.timeline({
        defaults: {
          duration: duration,
          stagger: duration / 15,
          repeatDelay: 1
        }
      });
      const settersTl = gsap.timeline();

      mainTl.timeScale(2);

      settersTl
        .set("#profile-divider", {
          height: 0,
          opacity: 0
        })
        .set("#profile-data", { opacity: 0 })
        .set("#profile-img", {
          opacity: 0,
          scale: 1.2
        });

      const fromVars = { opacity: 0, scale: 0.7, filter: "blur(40px)" };
      const toVars = { opacity: 1, scale: 1, filter: "none" };

      staggerTl
        .fromTo(letters, fromVars, toVars)
        .fromTo("#socials a", fromVars, toVars, "<+=0.2");

      mainTl
        .to(
          "#profile-img",
          { opacity: 1, scale: 1, ease: "power1.out" },
          "+=0.2"
        )
        .to("#profile-divider", { height: "2.5rem", opacity: 1 })
        .to("#profile-data", { opacity: 1 })
        .add(staggerTl)
        .to("body", { backgroundColor: "#fff", color: "#000" }, "<+=1")
        .to(main, { display: "flex", opacity: 1, duration: 1 })
        .to(
          nav,
          {
            display:
              window.location.pathname === "/"
                ? isDesktop
                  ? "flex"
                  : "none"
                : "flex",
            opacity: 1,
            duration: 1
          },
          "<+=0.2"
        )
        .to(footer, { display: "block", opacity: 1, duration: 1 }, "<+=0.2")
        .to(
          "#profile-divider",
          { backgroundColor: "rgb(0 0 0 / 0.6)" },
          "<-=0.5"
        );
    }
  );
</script>
