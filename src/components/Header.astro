---
import HeaderNavItem from "./HeaderNavItem.astro";
import Socials from "./Socials.astro";
---

<header
  class="absolute inset-x-0 mx-auto flex max-w-screen-2xl items-center justify-center overflow-x-hidden p-8 px-16 sm:justify-between"
>
  <div id="profile" class="flex scale-90 items-center gap-3">
    <img
      id="profile-img"
      src="/me.png"
      alt="raj"
      class="z-10 h-12 w-12 whitespace-nowrap rounded-full"
    />
    <div id="profile-divider" class="h-10 w-1 rounded-full bg-black/60"></div>
    <div id="profile-data" class="flex flex-col gap-2">
      <p id="name" class="font-medium">Full Stack Developer</p>
      <Socials className="flex items-center gap-2" />
    </div>
  </div>
  <!-- <div id="burger" class="group flex cursor-pointer flex-col items-end gap-2">
    <div
      class="h-0.5 w-8 rounded-full bg-black transition-all group-data-[active]:rotate-45"
    >
    </div>
    <div
      class="h-0.5 w-4 rounded-full bg-black transition-all group-data-[active]:-mt-2 group-data-[active]:w-8 group-data-[active]:-rotate-45"
    >
    </div>
  </div> -->

  <nav class="hidden items-center font-medium sm:flex">
    <HeaderNavItem href="#my-work">My work</HeaderNavItem>
    <HeaderNavItem href="#services">Services</HeaderNavItem>
    <!-- <HeaderNavItem href="#testimonials">Testimonials</HeaderNavItem>
    <HeaderNavItem href="">How much I charge</HeaderNavItem> -->
  </nav>
</header>

<script>
  import gsap from "gsap";
  import SplitType from "split-type";

  let mm = gsap.matchMedia();
  const breakPoint = 800;

  mm.add(
    {
      isDesktop: `(min-width: ${breakPoint}px)`,
      isMobile: `(max-width: ${breakPoint - 1}px)`,
      reduceMotion: "(prefers-reduced-motion: reduce)"
    },
    (context) => {
      // @ts-ignore
      const { isDesktop } = context.conditions;
      const main = document.querySelector("main");
      const nav = document.querySelector("nav");
      const footer = document.querySelector("footer");
      const letters = new SplitType("#name", { split: "chars" }).chars;
      const duration = 0.3;

      const mainTl = gsap.timeline();
      const staggerTl = gsap.timeline({
        defaults: {
          duration: duration,
          stagger: duration / 15,
          repeatDelay: 1
        }
      });
      const settersTl = gsap.timeline();

      mainTl.timeScale(2);

      settersTl
        .set("#profile-divider", {
          height: 0,
          opacity: 0
        })
        .set("#profile-data", { opacity: 0 })
        .set("#profile-img", {
          opacity: 0,
          scale: 1.2
        });

      const fromVars = { opacity: 0, scale: 0.7, filter: "blur(40px)" };
      const toVars = { opacity: 1, scale: 1, filter: "none" };

      staggerTl
        .fromTo(letters, fromVars, toVars)
        .fromTo("#socials a", fromVars, toVars, "<+=0.2");

      mainTl
        .to(
          "#profile-img",
          { opacity: 1, scale: 1, ease: "power1.out" },
          "+=0.2"
        )
        .to("#profile-divider", { height: "2.5rem", opacity: 1 })
        .to("#profile-data", { opacity: 1 })
        .add(staggerTl)
        .to("body", { backgroundColor: "#fff", color: "#000" }, "<+=1")
        .to(main, { display: "flex", opacity: 1, duration: 1 })
        .to(
          nav,
          { display: isDesktop ? "flex" : "none", opacity: 1, duration: 1 },
          "<+=0.2"
        )
        .to(footer, { display: "block", opacity: 1, duration: 1 }, "<+=0.2")
        .to(
          "#profile-divider",
          { backgroundColor: "rgb(0 0 0 / 0.6)" },
          "<-=0.5"
        );
    }
  );
</script>
